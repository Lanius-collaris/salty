{
  "_args": [
    [
      "ssh-key-decrypt@git+https://github.com/carlos8f/ssh-key-decrypt.git",
      "/Users/carlos8f/projects/salty/node_modules/pemtools"
    ]
  ],
  "_from": "git+https://github.com/carlos8f/ssh-key-decrypt.git",
  "_id": "ssh-key-decrypt@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/ssh-key-decrypt",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/carlos8f/ssh-key-decrypt/master/package.json",
      "gitUrl": "git://github.com/carlos8f/ssh-key-decrypt.git",
      "httpsUrl": "git+https://github.com/carlos8f/ssh-key-decrypt.git",
      "shortcut": "github:carlos8f/ssh-key-decrypt",
      "ssh": "git@github.com:carlos8f/ssh-key-decrypt.git",
      "sshUrl": "git+ssh://git@github.com/carlos8f/ssh-key-decrypt.git",
      "type": "github"
    },
    "name": "ssh-key-decrypt",
    "raw": "ssh-key-decrypt@git+https://github.com/carlos8f/ssh-key-decrypt.git",
    "rawSpec": "git+https://github.com/carlos8f/ssh-key-decrypt.git",
    "scope": null,
    "spec": "git+https://github.com/carlos8f/ssh-key-decrypt.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/pemtools"
  ],
  "_resolved": "git+https://github.com/carlos8f/ssh-key-decrypt.git#c27fe6fc12948148daa1f5c837a5a31a1599aa81",
  "_shasum": "ce29fcafc6d7f02091e000ce656d8ef0baa7fffa",
  "_shrinkwrap": null,
  "_spec": "ssh-key-decrypt@git+https://github.com/carlos8f/ssh-key-decrypt.git",
  "_where": "/Users/carlos8f/projects/salty/node_modules/pemtools",
  "author": {
    "email": "i@izs.me",
    "name": "Isaac Z. Schlueter",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/ssh-key-decrypt/issues"
  },
  "dependencies": {},
  "description": "Decrypt encrypted ssh private keys",
  "devDependencies": {},
  "gitHead": "c27fe6fc12948148daa1f5c837a5a31a1599aa81",
  "homepage": "https://github.com/isaacs/ssh-key-decrypt#readme",
  "keywords": [
    "ssh",
    "key",
    "decrypt",
    "pem",
    "openssl",
    "aes",
    "aes129",
    "aes256",
    "aes128",
    "des3",
    "3des",
    "des",
    "des-ede3-cbc",
    "passphrase"
  ],
  "license": "BSD",
  "main": "index.js",
  "name": "ssh-key-decrypt",
  "optionalDependencies": {},
  "readme": "# ssh-key-decrypt\n\nDecrypt encrypted ssh private keys\n\n## USAGE\n\n```javascript\nvar decrypt = require('ssh-key-decrypt');\n\n// you have to actually know this already of course.\nvar passphrase = 'hoohah';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar keyfile = path.resolve(process.env.HOME, '.ssh', 'id_rsa');\nvar fileData = fs.readFileSync(keyfile, 'ascii');\n\nvar key = decrypt(fileData, passphrase);\n\n// now key is the decoded data as a buffer\n// You can also optionally pass in an output encoding\n\nvar b64Key = decrypt(fileData, passphrase, 'base64');\n```\n\n## `decrypt(data, passphrase, [outEnc='buffer'])`\n\nData can be either a string or a buffer.  It is the contents of the\nkey file.\n\nIf the file is not encrypted, then the passphrase doesn't matter.\n\nIf the file is encrypted, then it'll decrypt it.\n\nEither way, the data is returned in the output encoding specified.\n\n## WARNING\n\nThis module is synchronous, as it performs no I/O.  However, it can\npotentially be kind of slow, since it does a bunch of crypto and\nhashes, so do not call it often or in hot code paths.\n\nAlso, as this is crypto, and thus only either exactly right or\nextremely wrong, it throws if anything unexpected is encountered.\n\n## Supported Ciphers\n\n* des3, aka DES-EDE3-CBC\n* des, aka DES-CBC\n* aes128, aka AES-128-CBC\n* aes192, aka AES-192-CBC\n* aes256, aka AES-256-CBC\n\nThe cipher type is determined from the file.  You do not have to\nspecify this.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/ssh-key-decrypt.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "0.1.1"
}
